Algorithm,Algorithm Type,Strength,Implementation Complexity,Description,PQC,Quantum Vulnerability,Recommended Replacement
RSA-2048,Asymmetric,2048-bit,Medium,Public-key encryption and digital signature algorithm based on integer factorization,No,Vulnerable to Shor's algorithm,Kyber-512
SHA-512,Hash Function,512-bit,Low,Cryptographic hash function providing 512-bit output,No,Vulnerable to quantum Grover's algorithm,SHA-3
ECC,Asymmetric,256-bit (commonly),High,Elliptic Curve Cryptography used for encryption and signatures,No,Vulnerable to Shor's algorithm,Dilithium-2
TLS 1.3,Protocol,N/A,High,Secure protocol suite using cryptographic algorithms for encrypted communication,No,Vulnerable depending on underlying algorithms,Use TLS 1.3 with PQC support
SHA-3,Hash Function,256/384/512-bit,Medium,SHA-3 is a cryptographic hash function with sponge construction,No,Vulnerable to quantum Grover's algorithm,Double-length SHA-3 (e.g. 512-bit)
Dilithium-2,Digital Signature,Security level ~128-bit,High,Post-quantum lattice-based digital signature algorithm,Yes,N/A,N/A
SSL,Protocol,N/A,Medium,Outdated cryptographic protocol for securing data,No,Vulnerable due to weak ciphers and design,Use TLS 1.3 with PQC support
SHA-1,Hash Function,160-bit,Low,Cryptographic hash function now considered broken,No,Vulnerable to collision attacks and Grover's algorithm,SHA-3
Sphincs+,Digital Signature,Security level ~128-bit,High,Post-quantum stateless hash-based signature scheme,Yes,N/A,N/A
Kyber-512,Key Exchange,Security level ~128-bit,Medium,Post-quantum lattice-based key encapsulation mechanism,Yes,N/A,N/A
Kyber-1024,Key Exchange,Security level ~256-bit,High,Stronger variant of Kyber for post-quantum key exchange,Yes,N/A,N/A
SHA-256,Hash Function,256-bit,Low,Widely used hash function for integrity and signatures,No,Vulnerable to quantum Grover's algorithm,SHA-3
TLS 1.2,Protocol,N/A,High,Older protocol for secure communications,No,Vulnerable depending on algorithm used,Use TLS 1.3 with PQC support
Code Signing,Application,N/A,Low,Technique to verify the authenticity and integrity of code using digital signatures,No,Depends on underlying algorithm,Use PQC algorithms like Dilithium-2 or SPHINCS+
